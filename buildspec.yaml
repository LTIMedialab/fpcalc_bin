version: 0.2

phases:
  # install:
  #     runtime-versions:
  #       python: 3.9
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - REPOSITORY_NAME=ray_deployment
      - REPOSITORY_URI=864365278736.dkr.ecr.us-east-2.amazonaws.com/$REPOSITORY_NAME
      # - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      #- aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin $REPOSITORY_URI
      - docker login -u AWS -p $(aws ecr get-login-password --region us-east-2) https://864365278736.dkr.ecr.us-east-2.amazonaws.com
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build . -t $REPOSITORY_URI:0.3
      - docker tag $REPOSITORY_URI:0.3 $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:0.3
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      # - printf '[{"name":"nodeapp","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - printf '[{"name":"ray_deployment","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json 
artifacts:
    files: imagedefinitions.json
